<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.g10.ssm.mapper.testdatabase.TestItemsDesignMapper">
	<resultMap id="BaseResultMap" type="com.g10.ssm.po.testdatabase.TestItemsDesign">
		<id column="test_items_design_id" property="testItemsDesignId"
			jdbcType="INTEGER" />
		<result column="exam_type" property="examType" jdbcType="VARCHAR" />
		<result column="lowerlimit_difficulty_id" property="lowerlimitDifficultyId"
			jdbcType="INTEGER" />
		<result column="toplimit_difficulty_id" property="toplimitDifficultyId"
			jdbcType="INTEGER" />
		<result column="number" property="number" jdbcType="INTEGER" />
		<result column="score" property="score" jdbcType="INTEGER" />
		<result column="items_order" property="itemsOrder" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		test_items_design_id, exam_type, lowerlimit_difficulty_id,
		toplimit_difficulty_id,
		number, score, items_order
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.g10.ssm.po.testdatabase.TestItemsDesignExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from Test_Items_Design
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from Test_Items_Design
		where test_items_design_id =
		#{testItemsDesignId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		Test_Items_Design
		where test_items_design_id =
		#{testItemsDesignId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.g10.ssm.po.testdatabase.TestItemsDesignExample">
		delete from Test_Items_Design
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.g10.ssm.po.testdatabase.TestItemsDesign">
		insert into Test_Items_Design
		(test_items_design_id, exam_type,
		lowerlimit_difficulty_id,
		toplimit_difficulty_id, number, score,
		items_order)
		values
		(#{testItemsDesignId,jdbcType=INTEGER}, #{examType,jdbcType=VARCHAR},
		#{lowerlimitDifficultyId,jdbcType=INTEGER},
		#{toplimitDifficultyId,jdbcType=INTEGER}, #{number,jdbcType=INTEGER},
		#{score,jdbcType=INTEGER},
		#{itemsOrder,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.g10.ssm.po.testdatabase.TestItemsDesign">
		insert into Test_Items_Design
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="testItemsDesignId != null">
				test_items_design_id,
			</if>
			<if test="examType != null">
				exam_type,
			</if>
			<if test="lowerlimitDifficultyId != null">
				lowerlimit_difficulty_id,
			</if>
			<if test="toplimitDifficultyId != null">
				toplimit_difficulty_id,
			</if>
			<if test="number != null">
				number,
			</if>
			<if test="score != null">
				score,
			</if>
			<if test="itemsOrder != null">
				items_order,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="testItemsDesignId != null">
				#{testItemsDesignId,jdbcType=INTEGER},
			</if>
			<if test="examType != null">
				#{examType,jdbcType=VARCHAR},
			</if>
			<if test="lowerlimitDifficultyId != null">
				#{lowerlimitDifficultyId,jdbcType=INTEGER},
			</if>
			<if test="toplimitDifficultyId != null">
				#{toplimitDifficultyId,jdbcType=INTEGER},
			</if>
			<if test="number != null">
				#{number,jdbcType=INTEGER},
			</if>
			<if test="score != null">
				#{score,jdbcType=INTEGER},
			</if>
			<if test="itemsOrder != null">
				#{itemsOrder,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.g10.ssm.po.testdatabase.TestItemsDesignExample"
		resultType="java.lang.Integer">
		select count(*) from Test_Items_Design
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update Test_Items_Design
		<set>
			<if test="record.testItemsDesignId != null">
				test_items_design_id =
				#{record.testItemsDesignId,jdbcType=INTEGER},
			</if>
			<if test="record.examType != null">
				exam_type = #{record.examType,jdbcType=VARCHAR},
			</if>
			<if test="record.lowerlimitDifficultyId != null">
				lowerlimit_difficulty_id =
				#{record.lowerlimitDifficultyId,jdbcType=INTEGER},
			</if>
			<if test="record.toplimitDifficultyId != null">
				toplimit_difficulty_id =
				#{record.toplimitDifficultyId,jdbcType=INTEGER},
			</if>
			<if test="record.number != null">
				number = #{record.number,jdbcType=INTEGER},
			</if>
			<if test="record.score != null">
				score = #{record.score,jdbcType=INTEGER},
			</if>
			<if test="record.itemsOrder != null">
				items_order = #{record.itemsOrder,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update Test_Items_Design
		set test_items_design_id =
		#{record.testItemsDesignId,jdbcType=INTEGER},
		exam_type =
		#{record.examType,jdbcType=VARCHAR},
		lowerlimit_difficulty_id =
		#{record.lowerlimitDifficultyId,jdbcType=INTEGER},
		toplimit_difficulty_id =
		#{record.toplimitDifficultyId,jdbcType=INTEGER},
		number =
		#{record.number,jdbcType=INTEGER},
		score =
		#{record.score,jdbcType=INTEGER},
		items_order =
		#{record.itemsOrder,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.g10.ssm.po.testdatabase.TestItemsDesign">
		update Test_Items_Design
		<set>
			<if test="examType != null">
				exam_type = #{examType,jdbcType=VARCHAR},
			</if>
			<if test="lowerlimitDifficultyId != null">
				lowerlimit_difficulty_id =
				#{lowerlimitDifficultyId,jdbcType=INTEGER},
			</if>
			<if test="toplimitDifficultyId != null">
				toplimit_difficulty_id =
				#{toplimitDifficultyId,jdbcType=INTEGER},
			</if>
			<if test="number != null">
				number = #{number,jdbcType=INTEGER},
			</if>
			<if test="score != null">
				score = #{score,jdbcType=INTEGER},
			</if>
			<if test="itemsOrder != null">
				items_order = #{itemsOrder,jdbcType=INTEGER},
			</if>
		</set>
		where test_items_design_id = #{testItemsDesignId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.g10.ssm.po.testdatabase.TestItemsDesign">
		update
		Test_Items_Design
		set exam_type = #{examType,jdbcType=VARCHAR},
		lowerlimit_difficulty_id = #{lowerlimitDifficultyId,jdbcType=INTEGER},
		toplimit_difficulty_id = #{toplimitDifficultyId,jdbcType=INTEGER},
		number = #{number,jdbcType=INTEGER},
		score = #{score,jdbcType=INTEGER},
		items_order = #{itemsOrder,jdbcType=INTEGER}
		where test_items_design_id
		= #{testItemsDesignId,jdbcType=INTEGER}
	</update>
</mapper>