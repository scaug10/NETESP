<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.g10.ssm.mapper.testdatabase.ClassificationOfTestdatabaseMapper">
  <resultMap id="BaseResultMap" type="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    <id column="test_database_id" jdbcType="INTEGER" property="testDatabaseId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    test_database_id, name, parent_id
  </sql>
  <select id="selectByExample" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Classification_Of_TestDatabase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Classification_Of_TestDatabase
    where test_database_id = #{testDatabaseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Classification_Of_TestDatabase
    where test_database_id = #{testDatabaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabaseExample">
    delete from Classification_Of_TestDatabase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    insert into Classification_Of_TestDatabase (test_database_id, name, parent_id
      )
    values (#{testDatabaseId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    insert into Classification_Of_TestDatabase
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testDatabaseId != null">
        test_database_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testDatabaseId != null">
        #{testDatabaseId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabaseExample" resultType="java.lang.Integer">
    select count(*) from Classification_Of_TestDatabase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Classification_Of_TestDatabase
    <set>
      <if test="record.testDatabaseId != null">
        test_database_id = #{record.testDatabaseId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Classification_Of_TestDatabase
    set test_database_id = #{record.testDatabaseId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    update Classification_Of_TestDatabase
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
    </set>
    where test_database_id = #{testDatabaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    update Classification_Of_TestDatabase
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT}
    where test_database_id = #{testDatabaseId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    <id column="test_database_id" jdbcType="INTEGER" property="testDatabaseId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    test_database_id, name, parent_id
  </sql>
  <select id="selectByExample" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Classification_Of_TestDatabase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Classification_Of_TestDatabase
    where test_database_id = #{testDatabaseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Classification_Of_TestDatabase
    where test_database_id = #{testDatabaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabaseExample">
    delete from Classification_Of_TestDatabase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    insert into Classification_Of_TestDatabase (test_database_id, name, parent_id
      )
    values (#{testDatabaseId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    insert into Classification_Of_TestDatabase
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testDatabaseId != null">
        test_database_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testDatabaseId != null">
        #{testDatabaseId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabaseExample" resultType="java.lang.Integer">
    select count(*) from Classification_Of_TestDatabase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Classification_Of_TestDatabase
    <set>
      <if test="record.testDatabaseId != null">
        test_database_id = #{record.testDatabaseId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Classification_Of_TestDatabase
    set test_database_id = #{record.testDatabaseId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    update Classification_Of_TestDatabase
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
    </set>
    where test_database_id = #{testDatabaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.g10.ssm.po.testdatabase.ClassificationOfTestdatabase">
    update Classification_Of_TestDatabase
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT}
    where test_database_id = #{testDatabaseId,jdbcType=INTEGER}
  </update>
</mapper>